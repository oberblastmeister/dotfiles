{
    "vim.leader": "<space>",
    "vim.surround": true,
    "vim.useSystemClipboard": true,
    "vim.highlightedyank.enable": true,
    "vim.debug.loggingLevelForConsole": "debug",
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "<C-a>"
            ],
            "commands": [
                "cursorHome"
            ]
        },
        {
            "before": [
                "<C-e>"
            ],
            "commands": [
                "cursorEnd"
            ]
        },
        {
            "before": [
                "<C-f>"
            ],
            "commands": [
                "cursorRight"
            ]
        },
        {
            "before": [
                "<C-b>"
            ],
            "commands": [
                "cursorLeft"
            ]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        // navigation
        {
            "before": [
                "<C-l>"
            ],
            "after": [
                "<C-w>",
                "C-l"
            ]
        },
        {
            "before": [
                "<C-h>"
            ],
            "after": [
                "<C-w>",
                "C-h"
            ]
        },
        {
            "before": [
                "<C-k>"
            ],
            "after": [
                "<C-w>",
                "C-k"
            ]
        },
        {
            "before": [
                "<C-j>"
            ],
            "after": [
                "<C-w>",
                "C-j"
            ]
        },
        // lsp stuff
        {
            "before": [
                "K"
            ],
            "commands": [
                "editor.action.showHover"
            ]
        },
        {
            "before": [
                "]",
                "g"
            ],
            "commands": [
                "editor.action.marker.next"
            ]
        },
        {
            "before": [
                "[",
                "g"
            ],
            "commands": [
                "editor.action.marker.prev"
            ]
        },
        {
            "before": [
                "]",
                "G"
            ],
            "commands": [
                "editor.action.marker.nextInFiles"
            ]
        },
        {
            "before": [
                "[",
                "G"
            ],
            "commands": [
                "editor.action.marker.prevInFiles"
            ]
        },
        {
            "before": [
                "g",
                "y"
            ],
            "commands": [
                "editor.action.goToTypeDefinition"
            ]
        },
        {
            "before": [
                "g",
                "r"
            ],
            "commands": [
                "editor.action.goToReferences"
            ]
        },
        {
            "before": [
                "g",
                "D"
            ],
            "commands": [
                "editor.action.goToImplementation"
            ]
        },
        {
            "before": [
                "<leader>",
                "="
            ],
            "commands": [
                "editor.action.formatDocument"
            ]
        },
        {
            "before": [
                "<leader>",
                "a"
            ],
            "commands": [
                "keyboard-quickfix.openQuickFix"
            ]
        },
        {
            "before": [
                "<leader>",
                "r",
                "n"
            ],
            "commands": [
                "editor.action.rename"
            ]
        },
        {
            "before": [
                "<leader>",
                "l"
            ],
            "commands": [
                "codelens.showLensesInCurrentLine"
            ]
        },
        {
            "before": [
                "<leader>",
                "<leader>"
            ],
            "commands": [
                "editor.action.openLink"
            ]
        },
        // git stuff
        {
            "before": [
                "<leader>",
                "h",
                "r"
            ],
            "commands": [
                "git.revertSelectedRanges"
            ]
        },
        {
            "before": [
                "<leader>",
                "h",
                "s"
            ],
            "commands": [
                "git.stageSelectedRanges"
            ]
        },
        // default stuff
        {
            "before": [
                "<leader>",
                "w"
            ],
            "commands": [
                ":write"
            ]
        },
        {
            "before": [
                "<leader>",
                "q"
            ],
            "commands": [
                ":quit"
            ]
        },
        {
            "before": [
                "<leader>",
                "o"
            ],
            "commands": [
                ":only"
            ]
        },
        {
            "before": [
                "<leader>",
                "/"
            ],
            "commands": [
                "editor.action.startFindReplaceAction"
            ]
        },
        {
            "before": [
                "<C-b>"
            ],
            "commands": [
                "workbench.action.toggleSidebarVisibility"
            ]
        },
        {
            "before": [
                "<C-e>"
            ],
            "commands": [
                "workbench.view.explorer"
            ]
        },
        {
            "before": [
                "<tab>"
            ],
            "commands": [
                "editor.fold"
            ]
        }
    ],
    "vim.normalModeKeyBindings": [
        {
            "before": [
                "<leader>",
                "c",
                "c"
            ],
            "after": [
                "g",
                "c",
                "c"
            ]
        },
        {
            "before": [
                "<leader>",
                "c"
            ],
            "after": [
                "g",
                "c"
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "K"
            ],
            "commands": [
                "editor.action.showHover"
            ]
        }
    ],
    "vscode-neovim.neovimExecutablePaths.linux": "nvim",
    // colorscheme
    "workbench.colorTheme": "Gruvbox Material Dark",
    "gruvboxMaterial.darkPalette": "original",
    // turn off fuzzy finding on type in exploerer
    "workbench.list.automaticKeyboardNavigation": false,
    "editor.lineNumbers": "relative",
    // scrolling
    "editor.smoothScrolling": false,
    "workbench.list.smoothScrolling": true,
    // fonts
    "editor.fontWeight": "normal",
    "editor.fontSize": 12,
    "editor.fontFamily": "FiraCode Nerd Font",
    "editor.fontLigatures": true,
    "editor.suggestSelection": "first",
    "editor.minimap.enabled": false,
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    // do not accept completions on enter
    "editor.acceptSuggestionOnEnter": "off",
    "terminal.integrated.commandsToSkipShell": [
        "language-julia.interrupt"
    ],
    "julia.enableTelemetry": false,
    "editor.largeFileOptimizations": false,
    // "outline.problems.colors": false,
    "problems.showCurrentInStatus": true,
    "editor.renderWhitespace": "none",
    "redhat.telemetry.enabled": false,
    "workbench.startupEditor": "none",
    "files.exclude": {
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "editor.cursorBlinking": "solid",
    "editor.suggest.localityBonus": true,
    "terminal.integrated.scrollback": 10000,
    // languages
    "vim.foldfix": true,
    "gitlens.codeLens.enabled": false,
    "[markdown]": {
        "editor.tabSize": 2,
    },
    "[haskell]": {
        "editor.tabSize": 2
    },
    "[racket]": {
        "editor.bracketPairColorization.enabled": true,
        "editor.tabSize": 2
    },
    "[lua]": {
        "editor.tabSize": 2
    },
    "[nix]": {
        "editor.tabSize": 2
    },
    "[yaml]": {
        "editor.quickSuggestions": {
            "other": true,
            "comments": false,
            "strings": true
        }
    },
    "python.analysis.completeFunctionParens": true,
    "python.analysis.typeCheckingMode": "strict",
    "nix.enableLanguageServer": true,
    "markdown.extension.math.enabled": false,
    "cSpell.enabledLanguageIds": [
        "markdown"
    ],
    "security.workspace.trust.enabled": false,
    "workbench.editorAssociations": {
        "git-rebase-todo": "default"
    },
    "whichkey.delay": 500,
    "whichkey.bindings": [
        {
            "key": "w",
            "name": "write",
            "command": "workbench.action.files.save",
        },
        {
            "key": "q",
            "name": "quit",
            "command": "workbench.action.closeEditorsInGroup",
        },
        {
            "key": "Q",
            "name": "quit all",
            "command": "workbench.action.closeAllEditors",
        },
        {
            "key": "x",
            "name": "save and quit",
            "command": "vscode-neovim.send",
            "args": ":Wq<CR>",
        },
        {
            "key": "o",
            "name": "only",
            "command": "vscode-neovim.send",
            "args": ":Only<CR>",
        },
        {
            "key": "=",
            "name": "format document",
            "command": "editor.action.formatDocument",
        },
        {
            "key": "a",
            "name": "code actions",
            "command": "keyboard-quickfix.openQuickFix",
        },
        {
            "key": "L",
            "name": "code lens",
            "command": "codelens.showLensesInCurrentLine",
        },
        {
            "key": "l",
            "name": "lsp",
            "bindings": [
                {
                    "key": "R",
                    "name": "rename",
                    "command": "editor.action.rename",
                },
                {
                    "key": "y",
                    "name": "type definition",
                    "command": "editor.action.goToTypeDefinition",
                },
                {
                    "key": "r",
                    "name": "references",
                    "command": "editor.action.goToReferences",
                },
            ],
        },
        {
            "key": "space",
            "name": "open link",
            "command": "editor.action.openLink",
        },
        {
            "key": "h",
            "name": "Hunk",
            "bindings": [
                {
                    "key": "r",
                    "name": "revert",
                    "command": "git.revertSelectedRanges",
                },
                {
                    "key": "s",
                    "name": "stage",
                    "command": "git.stageSelectedRanges",
                }
            ],
        },
        {
            "key": "g",
            "name": "git",
            "bindings": [
                {
                    "key": "s",
                    "name": "magit status",
                    "command": "magit.status",
                },
                {
                    "key": "d",
                    "name": "show changes",
                    "command": "git.openChange"
                }
            ]
        },
        {
            "key": "b",
            "name": "buffers",
            "bindings": [],
        },
        // {
        //     "key": "t",
        //     "name": "tab",
        //     "bindings": [
        //         {
        //             "key": "d",
        //             "name": "close tab",
        //             "command": "workbench.action.closeActiveEditor"
        //         }
        //     ],
        // },
        {
            "key": "d",
            "name": "debug",
            "bindings": [
                {
                    "key": "c",
                    "name": "continue",
                    "command": "workbench.action.debug.continue",
                    "when": "debugStart == 'stopped'"
                },
                {
                    "key": "s",
                    "name": "start",
                    "command": "workbench.action.debug.start",
                    "when": "debuggersAvailable && debugState == 'inactive'"
                },
                {
                    "key": "S",
                    "name": "stop",
                    "command": "workbench.action.debug.stop",
                    "when": "inDebugMode && !focusedSessionIsAttach"
                },
                {
                    "key": "r",
                    "name": "restart",
                    "command": "workbench.action.debug.restart",
                    "when": "inDebugMode"
                },
                {
                    "key": "-",
                    "name": "step in",
                    "command": "workbench.action.debug.stepInto",
                    "when": "debugState != 'inactive'"
                },
                {
                    "key": "+",
                    "name": "step out",
                    "command": "workbench.action.debug.stepOut",
                    "when": "debugState == 'stopped'"
                },
                {
                    "key": "o",
                    "name": "step over",
                    "command": "workbench.action.debug.stepOver",
                    "when": "debugState == 'stopped'"
                },
                {
                    "key": "b",
                    "name": "breakpoint",
                    "bindings": [
                        {
                            "key": "t",
                            "name": "toggle",
                            "command": "editor.debug.action.toggleBreakpoint",
                        },
                        {
                            "key": "T",
                            "name": "toggle",
                            "command": "editor.debug.action.toggleInlineBreakpoint",
                        },
                        {
                            "key": "f",
                            "name": "function",
                            "command": "workbench.debug.viewlet.action.addFunctionBreakpointAction",
                        },
                        {
                            "key": "e",
                            "name": "edit",
                            "command": "debug.editBreakpoint",
                        },
                        {
                            "key": "-",
                            "name": "disable all",
                            "command": "workbench.debug.viewlet.action.disableAllBreakpoints",
                        },
                        {
                            "key": "_",
                            "name": "remove all",
                            "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
                        },
                        {
                            "key": "=",
                            "name": "enable all",
                            "command": "workbench.debug.viewlet.action.enableAllBreakpoints",
                        },
                        {
                            "key": "c",
                            "name": "conditional",
                            "command": "editor.debug.action.conditionalBreakpoint",
                        }
                    ]
                }
            ],
        },
        {
            "key": "f",
            "name": "find",
            "bindings": [
                {
                    "key": "p",
                    "name": "files",
                    "command": "workbench.action.quickOpen"
                },
                {
                    "key": "s",
                    "name": "symbols",
                    "command": "workbench.action.gotoSymbol",
                },
                {
                    "key": "w",
                    "name": "workspace symbols",
                    "command": "workbench.action.showAllSymbols",
                },
                {
                    "key": "c",
                    "name": "commands",
                    "command": "workbench.action.showCommands",
                },
                {
                    "key": "r",
                    "name": "recent",
                    "command": "workbench.action.openRecent",
                },
                {
                    "key": "b",
                    "name": "buffers (editors)",
                    "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
                }
                // {
                //     "key": "t",
                //     "name": "terminals",
                //     "command": 
                // }
            ],
        },
        {
            "key": "B",
            "name": "toggle sidebar",
            "command": "workbench.action.toggleSidebarVisibility",
        },
        {
            "key": "/",
            "name": "replace in files",
            "command": "workbench.action.replaceInFiles",
        },
    ],
    "workbench.panel.defaultLocation": "right",
    "workbench.activityBar.visible": false,
    "extensions.ignoreRecommendations": true,
    "telemetry.enableTelemetry": false,
    // cancel the stupid menu from popping up
    "window.menuBarVisibility": "hidden",
    "update.mode": "none",
}